version: '3.9'
services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "0520"
      POSTGRES_DB: "ostock_dev"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  configserver:
    build:
      context: configserver
      dockerfile: Dockerfile
    ports:
      - "9091:9091"
    environment:
      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    networks:
      backend:
        aliases:
          - "configserver"
  eurekaserver:
    build:
      dockerfile: Dockerfile
      context: eurekaserver
    ports:
      - "9092:9092"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"
  licensingservice:
    build:
      context: licensing-service
      dockerfile: Dockerfile
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:9092"
      CONFIGSERVER_PORT: "9092"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      - "9090:9090"
    networks:
      - backend
  organizationservice:
    build:
      context: organization-service
      dockerfile: Dockerfile
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:9092"
      CONFIGSERVER_PORT: "9092"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      - "9094:9094"
    networks:
      - backend

networks:
  backend:
    driver: bridge